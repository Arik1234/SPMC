package @APP_PACKAGE@;

import android.content.Context;
import android.util.Log;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.inputmethod.EditorInfo;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;

public class SoftKeyboardView extends FrameLayout
{
  private static final String TAG = "XBMCKeyboardView";

  private Main mMain;
  public EditText editText;

  class DoneOnEditorActionListener implements TextView.OnEditorActionListener
  {
    @Override
    public boolean onEditorAction(TextView v, int actionId, KeyEvent event)
    {
      if (actionId == EditorInfo.IME_ACTION_DONE)
      {
        close(false);
        return true;
      }
      return false;
    }
  }

  private void close(boolean isCanceled)
  {
    InputMethodManager imm = (InputMethodManager)getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
    imm.hideSoftInputFromWindow(this.editText.getWindowToken(), 0);
    if (isCanceled)
      mMain.cancelKeyboard();
    else
      mMain.finishKeyboard();
  }

  private void inflateLayout()
  {
    final InputMethodManager imm = (InputMethodManager)getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
    LayoutInflater inflater = LayoutInflater.from(getContext());
    inflater.inflate(R.layout.view_soft_keyboard, this);

    this.editText = (EditText) findViewById(R.id.editText);
    this.editText.setOnEditorActionListener(new DoneOnEditorActionListener());
    this.editText.postDelayed(new Runnable()
    {
      @Override
      public void run()
      {
        editText.requestFocus();
        imm.showSoftInput(editText, 0);
      }
    }, 1);
  }

  public SoftKeyboardView(Main context)
  {
    super(context);
    Log.d(TAG, "Created");
    this.mMain = context;
    inflateLayout();
  }

  @Override
  public boolean dispatchKeyEventPreIme(KeyEvent event)
  {
    if (event.getKeyCode() == KeyEvent.KEYCODE_BACK)
    {
        close(true);
        return true;
    }
    return super.dispatchKeyEventPreIme(event);
  }

  void SetLabel(String txt)
  {
    TextView label = (TextView) findViewById(R.id.label);
    label.setText(txt);
  }

  void SetText(String text)
  {
    this.editText.setText(text);
  }

  String GetText()
  {
    return this.editText.getText().toString();
  }
}
